name: "Desktop App Publish"

on:
  push:
    tags:
      - "v*"
    branches:
      - desktop
      - release
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          version: 9.2.0
          node-version: lts/*
          cache: pnpm
          cache-dependency-path: ./pnpm-lock.yaml

      # macOS：安装独立 Python 3.11，避免系统 Python 限制
      - name: Setup Python (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install setuptools (macOS)
        if: matrix.os == 'macos-latest'
        run: python -m pip install setuptools

      # Ubuntu：安装 Python 3.11，确保有完整 distutils 支持
      - name: Setup Python 3.11 (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Ensure pip and setuptools (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip setuptools wheel

      - name: Check pnpm version
        run: pnpm -v

      - name: Install Dependencies
        run: pnpm install

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        env:
          NODE_OPTIONS: --max-old-space-size=8192
        run: pnpm run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        env:
          NODE_OPTIONS: --max-old-space-size=8192
        run: pnpm run build:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        env:
          NODE_OPTIONS: --max-old-space-size=8192
        run: pnpm run build:win

      - name: List dist directory
        run: ls -l apps/electron/dist

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          body: "See the assets to download this version and install."
          files: |
            apps/electron/dist/*.exe
            apps/electron/dist/*.zip
            apps/electron/dist/*.dmg
            apps/electron/dist/*.AppImage
            apps/electron/dist/*.snap
            apps/electron/dist/*.deb
            apps/electron/dist/*.rpm
            apps/electron/dist/*.tar.gz
            apps/electron/dist/*.yml
            apps/electron/dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}